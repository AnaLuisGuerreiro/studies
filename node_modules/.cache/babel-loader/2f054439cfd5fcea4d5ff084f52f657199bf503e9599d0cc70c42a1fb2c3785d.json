{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miiiiix\\\\Documents\\\\Curso_react_next\\\\projeto1\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport PostCard from \"./components/PostCard/PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0,\n      posts: [{\n        id: 1,\n        title: \"O titulo 1\",\n        body: \"Corpo do post 1\"\n      }, {\n        id: 2,\n        title: \"O titulo 2\",\n        body: \"Corpo do post 2\"\n      }, {\n        id: 3,\n        title: \"O titulo 3\",\n        body: \"Corpo do post 3\"\n      }]\n    };\n    this.loadPosts = async () => {\n      const postResponse = fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      const photosResponse = fetch(\"https://jsonplaceholder.typicode.com/photos\");\n      const [posts, photos] = await Promise.all([postResponse, photosResponse]);\n      const postsJson = await posts.json();\n      const photosJson = await photos.json();\n      const postsAndPhotos = postsJson.map((post, index) => {\n        return {\n          ...post,\n          cover: photosJson[index].url\n        };\n      });\n      this.setState({\n        posts: postsAndPhotos\n      });\n    };\n  }\n  componentDidMount() {\n    this.loadPosts();\n  }\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","PostCard","jsxDEV","_jsxDEV","App","constructor","args","state","counter","posts","id","title","body","loadPosts","postResponse","fetch","photosResponse","photos","Promise","all","postsJson","json","photosJson","postsAndPhotos","map","post","index","cover","url","setState","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Miiiiix/Documents/Curso_react_next/projeto1/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { Component } from \"react\";\nimport PostCard from \"./components/PostCard/PostCard\";\n\nclass App extends Component {\n  state = {\n    counter: 0,\n    posts: [\n      {\n        id: 1,\n        title: \"O titulo 1\",\n        body: \"Corpo do post 1\",\n      },\n      {\n        id: 2,\n        title: \"O titulo 2\",\n        body: \"Corpo do post 2\",\n      },\n      {\n        id: 3,\n        title: \"O titulo 3\",\n        body: \"Corpo do post 3\",\n      },\n    ],\n  };\n\n  componentDidMount() {\n    this.loadPosts();\n  }\n\n  loadPosts = async () => {\n    const postResponse = fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const photosResponse = fetch(\"https://jsonplaceholder.typicode.com/photos\");\n\n    const [posts, photos] = await Promise.all([postResponse, photosResponse]);\n    const postsJson = await posts.json();\n    const photosJson = await photos.json();\n\n    const postsAndPhotos = postsJson.map((post, index) => {\n      return { ...post, cover: photosJson[index].url };\n    });\n\n    this.setState({ posts: postsAndPhotos });\n  };\n\n  render() {\n    const { posts } = this.state;\n    return (\n      <section className=\"container\">\n        <div className=\"posts\">\n          {posts.map((post) => (\n            <PostCard key={post.id} post={post} />\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MACNC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE,CACL;QACEC,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE;MACR,CAAC,EACD;QACEF,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE;MACR,CAAC,EACD;QACEF,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE;MACR,CAAC;IAEL,CAAC;IAAA,KAMDC,SAAS,GAAG,YAAY;MACtB,MAAMC,YAAY,GAAGC,KAAK,CAAC,4CAA4C,CAAC;MACxE,MAAMC,cAAc,GAAGD,KAAK,CAAC,6CAA6C,CAAC;MAE3E,MAAM,CAACN,KAAK,EAAEQ,MAAM,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAACL,YAAY,EAAEE,cAAc,CAAC,CAAC;MACzE,MAAMI,SAAS,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,CAAC;MACpC,MAAMC,UAAU,GAAG,MAAML,MAAM,CAACI,IAAI,CAAC,CAAC;MAEtC,MAAME,cAAc,GAAGH,SAAS,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACpD,OAAO;UAAE,GAAGD,IAAI;UAAEE,KAAK,EAAEL,UAAU,CAACI,KAAK,CAAC,CAACE;QAAI,CAAC;MAClD,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAAC;QAAEpB,KAAK,EAAEc;MAAe,CAAC,CAAC;IAC1C,CAAC;EAAA;EAjBDO,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACjB,SAAS,CAAC,CAAC;EAClB;EAiBAkB,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEtB;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK;IAC5B,oBACEJ,OAAA;MAAS6B,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC5B9B,OAAA;QAAK6B,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnBxB,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdtB,OAAA,CAACF,QAAQ;UAAewB,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACf,EAAE;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEd;AACF;AAEA,eAAejC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}